{"version":3,"sources":["components/MapContainer.jsx","scripts/RouteRequester.js","components/UserInput.jsx","components/Button.jsx","components/detour/LocationSlider.jsx","components/detour/RadiusSlider.jsx","scripts/DetourRequester.js","components/detour/DetourForm.jsx","components/detour/Detour.jsx","components/detour/DetourOptions.jsx","components/Main.jsx","containers/MainContainer.js","App.js","serviceWorker.js","reducers/main-reducer.js","index.js"],"names":["MapContainer","props","state","mapStyle","width","height","adjustMap","bind","mapProps","map","this","route","legth","google","bounds","markers","maps","LatLngBounds","ne_lat","northeast","lat","ne_lng","lng","sw_lat","southwest","sw_lng","extend","LatLng","fitBounds","showRoute","routeCoordinates","overview_polyline","complete_overview","point","showDetourPoint","detourPoint","routeLength","length","Math","floor","detourLocation","showDetourOptions","detourOptions","detour","position","geometry","location","zoom","style","initialCenter","onReady","defaultPosition","center","path","geodesic","strokeColor","strokeOpacity","strokeWeight","radius","parseFloat","detourRadius","fillColor","fillOpacity","React","Component","GoogleApiWrapper","apiKey","RouteRequester","origin","destination","type","opts","parameters","waypoint","placeId","Promise","resolve","reject","axios","get","headers","params","then","response","data","catch","error","console","log","TripInput","requestRoute","e","preventDefault","target","value","setOrigin","setDestination","getRoute","routes","setRoute","className","onSubmit","placeholder","Button","disabled","disabledCriteria","onClick","id","text","LocationSlider","updateDetourLocation","setDetourLocation","min","max","defaultValue","onChange","RadiusSlider","updateDetourRadius","setDetourRadius","DetourRequester","searchText","DetourForm","getDetours","detourRequester","decodedPoints","setDetourOptions","results","Detour","addDetour","clearDetourOptions","key","toString","name","DetourOptions","option","optionLat","optionLng","optionId","optionPlaceId","place_id","Main","UserInput","showDetourForm","showDetourButton","getDetourForm","connect","dispatch","App","MainContainer","Boolean","window","hostname","match","initialState","routeOptions","mainReducer","action","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c642f036.chunk.js","sourcesContent":["import React from 'react';\nimport { Map, Circle , Polyline, Marker, GoogleApiWrapper } from 'google-maps-react';\n\nclass MapContainer extends React.Component {\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      mapStyle: {\n        width: '100%',\n        height: '100%'\n      }\n    }\n\n    this.adjustMap = this.adjustMap.bind(this);\n  }\n\n  adjustMap(mapProps, map) {\n    \n    if(this.props.route.legth > 0){\n      const {google, markers} = mapProps;\n      const bounds = new google.maps.LatLngBounds();\n    \n      const ne_lat = this.props.route.bounds.northeast.lat;\n      const ne_lng = this.props.route.bounds.northeast.lng;\n      const sw_lat = this.props.route.bounds.southwest.lat;\n      const sw_lng = this.props.route.bounds.southwest.lng;\n      bounds.extend(new google.maps.LatLng(ne_lat, ne_lng));\n      bounds.extend(new google.maps.LatLng(sw_lat, sw_lng));\n    \n      map.fitBounds(bounds);\n      // map.panToBounds(bounds);\n    }\n  }\n\n    render() {\n\n      if(this.props.showRoute)\n      {\n        var routeCoordinates = this.props.route.overview_polyline.complete_overview.map(point =>\n          {\n            return {lat: point[0], lng: point[1]}\n          });\n      }\n\n      if(this.props.showDetourPoint && this.props.showRoute)\n      {\n        var detourPoint = {};\n        var routeLength = routeCoordinates.length;\n        var routeIndex = Math.floor(this.props.detourLocation/100 * routeLength);\n        detourPoint = routeCoordinates[routeIndex];\n      }\n\n      var showDetourOptions = false;\n      if(this.props.detourOptions.length > 0){\n        showDetourOptions = true;\n        var detourOptions = this.props.detourOptions.map(detour =>\n          {\n            return (\n              <Marker\n                position={\n                  {lat: detour.geometry.location.lat, \n                  lng: detour.geometry.location.lng}}>\n              </Marker>)\n          })\n      }\n\n      return (\n          <Map\n            google={this.props.google}\n            zoom={9}\n            style={this.state.mapStyle}\n            initialCenter={{ lat: 33.749, lng: -84.388}}\n            onReady={this.adjustMap}\n          >\n            {this.props.showRoute ? (\n              <Polyline\n                    defaultPosition={this.props.center}\n                    path= {routeCoordinates}\n                    geodesic= {true}\n                    strokeColor= {\"#007bff\"}\n                    strokeOpacity= {1.0}\n                    strokeWeight= {5}\n                />\n            ): (<div></div>)}\n            {this.props.showDetourPoint ? (\n              <Marker\n                    position={detourPoint}\n                />\n            ): (<div></div>)}\n            {this.props.showDetourPoint ? (\n              <Circle\n              radius={parseFloat(this.props.detourRadius)}\n              center={detourPoint}\n              strokeColor='transparent'\n              strokeOpacity={0}\n              strokeWeight={5}\n              fillColor='#FF0000'\n              fillOpacity={0.2}\n            />\n            ): (<div></div>)}\n            {showDetourOptions ? (\n              detourOptions\n            ): (<div></div>)}\n            \n          </Map>\n      );\n    }\n}\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyArWVAF5NWcXq8RenpdK2vtTZNSX3zaKG4'\n  })(MapContainer);","import axios from \"axios\";\n\nexport default class RouteRequester {\n  getRoute(origin, destination, type, opts) {\n    // Initialize the parameters to pass in\n    var parameters = {};\n\n    // Switch on if this is an address or coordinates\n    switch (type) {\n      case \"Address\":\n        parameters = {\n          type: \"Address\",\n          origin: origin,\n          destination: destination\n        };\n        if (opts[\"waypoint\"]) {\n          parameters.waypoint = opts.waypoint.placeId;\n        }\n        break;\n\n      case \"Coordinates\":\n        break;\n\n      default:\n    }\n\n    var promise = new Promise(function(resolve, reject) {\n      // Send an axios GET request to the server\n      axios\n        .get(\"https://45.32.210.179:8080/route\", {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          params: parameters\n        })\n        .then(response => {\n          // Decode and send the response\n          resolve(response.data);\n        })\n        .catch(error => {\n          console.log(\n            \"ERROR: Unable to get response from the server\\n User input may be formatted incorrectly\" +\n              error.response\n          );\n          reject(error);\n        });\n    });\n\n    return promise;\n  }\n}\n","import React from 'react';\n\nimport RouteRequester from '../scripts/RouteRequester.js'\n\nclass TripInput extends React.Component {\n\n    constructor() {\n        super();\n\n        // Bind 'this' to the requestRoute method\n        this.requestRoute = this.requestRoute.bind(this);\n    }\n\n    requestRoute(e){\n        e.preventDefault();\n        var origin = e.target[0].value;\n        var destination = e.target[1].value;\n        this.props.setOrigin(origin);\n        this.props.setDestination(destination);\n        var routeRequester = new RouteRequester();\n        routeRequester.getRoute(origin, destination, \"Address\", {})\n        .then(data => {\n            if(data.routes.length > 0){\n              this.props.setRoute(data.routes[0]);\n            }\n          })\n          .catch(function(error) {\n            console.log(\"Error: \" + error);\n          });\n    }\n\n    render() {\n        return (\n          <div className=\"user-input container\">\n            <form onSubmit={this.requestRoute}>\n              <div className=\"form-group \">\n                <input className=\"form-control-lg route-input\" type=\"text\" placeholder=\"Origin\"/>\n              </div>\n              <div className=\"form-group\">\n                <input className=\"form-control-lg route-input\" type=\"text\" placeholder=\"Destination\"/>\n              </div>\n              <div className=\"form-group \">\n                <input className=\"btn-default form-control-lg route-submit\" type=\"submit\" value=\"Get Route\" />\n              </div>\n            </form>\n\n\n          </div>\n        )\n    }\n}\n\nexport default TripInput;","import React from 'react';\n\nlet Button = (props) => {\n    return (\n        <div className=\"Button\">\n            <button \n                disabled={props.disabledCriteria}\n                onClick={props.onClick} \n                className={props.className}\n                id={props.id}>\n                {props.text}\n            </button>\n        </div>\n    )\n}\n\nexport default Button;","import React from 'react';\n\nclass LocationSlider extends React.Component {\n    constructor(){\n        super();\n\n        // Bind 'this' to the updateDetourLocation method\n        this.updateDetourLocation = this.updateDetourLocation.bind(this);\n    }\n\n    updateDetourLocation(value)\n    {\n        this.props.setDetourLocation(value);\n    }\n\n    render(){\n        return(\n            <div className=\"slide-container\">\n                <h6>Location</h6>\n                <input \n                    type=\"range\" \n                    min=\"1\" \n                    max=\"100\" \n                    defaultValue=\"50\"\n                    onChange={(e) => this.updateDetourLocation(e.target.value)}\n                    className=\"slider slider-location\" \n                    id=\"myRange\"></input>\n            </div>\n        )\n    }\n}\n\nexport default LocationSlider;","import React from 'react';\n\nclass RadiusSlider extends React.Component {\n    constructor(){\n        super();\n\n        // Bind 'this' to the updateDetourLocation method\n        this.updateDetourRadius = this.updateDetourRadius.bind(this);\n    }\n\n    updateDetourRadius(value)\n    {\n        this.props.setDetourRadius(value);\n    }\n\n    render(){\n        return(\n            <div className=\"slidecontainer\">\n                <h6>Radius</h6>\n                <input \n                    type=\"range\" \n                    min=\"1\" \n                    max=\"100000\" \n                    defaultValue=\"50\"\n                    onChange={(e) => this.updateDetourRadius(e.target.value)}\n                    className=\"slider\" \n                    id=\"detourRadius\"></input>\n            </div>\n        )\n    }\n}\n\nexport default RadiusSlider;","import axios from \"axios\";\n\nexport default class DetourRequester {\n  getDetours(lat, lng, radius, type) {\n    // Initialize the parameters to pass in\n    var parameters = {\n      searchText: type,\n      lat: lat,\n      lng: lng,\n      radius: radius\n    };\n\n    var promise = new Promise(function(resolve, reject) {\n      // Send an axios GET request to the server\n      axios\n        .get(\"https://45.32.210.179:8080/places\", {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          params: parameters\n        })\n        .then(response => {\n          // Decode and send the response\n          resolve(response.data);\n        })\n        .catch(error => {\n          console.log(\n            \"ERROR: Unable to get response from the server\\n User input may be formatted incorrectly\" +\n              error.response\n          );\n          reject(error);\n        });\n    });\n\n    return promise;\n  }\n}\n","import React from 'react';\nimport LocationSlider from './LocationSlider';\nimport RadiusSlider from './RadiusSlider';\nimport Button from '../Button';\nimport DetourRequester from '../../scripts/DetourRequester';\n\nclass DetourForm extends React.Component {\n    constructor(){\n        super();\n\n        // Bind 'this' to the getDetours method\n        this.getDetours = this.getDetours.bind(this);\n    }\n\n    getDetours(){\n        var detourRequester = new DetourRequester();\n        var routeCoordinates = this.props.route.overview_polyline.decodedPoints.map(point =>\n            {\n              return {lat: point[0], lng: point[1]}\n            });\n        var routeLength = routeCoordinates.length;\n        var routeIndex = Math.floor(this.props.detourLocation/100 * routeLength);\n        var detourPoint = routeCoordinates[routeIndex];\n\n        detourRequester.getDetours(detourPoint.lat, detourPoint.lng, this.props.detourRadius, \"Hike\")\n        .then(data => {\n            this.props.setDetourOptions(data.results);\n          })\n          .catch(function(error) {\n            console.log(\"Error: \" + error);\n          });\n    }\n\n    render(){\n        return(\n            <div className=\"detour-form container\">\n                <h4>Detour Options</h4>\n                <LocationSlider\n                    setDetourLocation = {this.props.setDetourLocation}>\n                </LocationSlider>\n                <RadiusSlider\n                    setDetourRadius = {this.props.setDetourRadius}>\n                </RadiusSlider>\n                <Button\n                    onClick={this.getDetours}\n                    className = \"btn btn-primary main-button\"\n                    id = \"get-detours-button\"\n                    text = \"Get detours\">\n                </Button>\n            </div>\n        )\n    }\n}\n\nexport default DetourForm;","import React from 'react';\nimport Button from '../Button';\nimport RouteRequester from '../../scripts/RouteRequester.js'\n\nclass Detour extends React.Component {\n    constructor(){\n        super();\n\n        // Bind 'this' to the addDetour method\n        this.addDetour = this.addDetour.bind(this);\n    }\n\n    addDetour(){\n        var routeRequester = new RouteRequester();\n        routeRequester.getRoute(\n            this.props.origin, \n            this.props.destination, \n            \"Address\", \n            {waypoint:{placeId:this.props.placeId}})\n        .then(data => {\n            if(data.routes.length > 0){\n              this.props.setRoute(data.routes[0]);\n              this.props.clearDetourOptions();\n            }\n          })\n          .catch(function(error) {\n            console.log(\"Error: \" + error);\n          });\n    }\n\n    render(){\n        return(\n            <li key={this.props.id.toString()}>\n                <p>{this.props.name}</p>\n                <Button\n                onClick={this.addDetour}\n                className = \"detour-button\"\n                id = \"${option.name}-detour-button\"\n                text = \"Add detour\">\n                </Button>\n            </li>\n        )\n    }\n}\n\nexport default Detour;","import React from 'react';\nimport Detour from './Detour';\n\nclass DetourOptions extends React.Component {\n    constructor(){\n        super();\n    }\n\n    render(){\n        var detourOptions = this.props.detourOptions.map(option =>\n            {\n                var optionLat = option.geometry.location.lat;\n                var optionLng = option.geometry.location.lng;\n                var optionId = option.id;\n                var optionPlaceId = option.place_id;\n\n              return (\n                  <Detour\n                     origin = {this.props.origin}\n                     destination = {this.props.destination}\n                     name = {option.name}\n                     lat = {optionLat}\n                     lng = {optionLng}\n                     id = {optionId}\n                     placeId = {optionPlaceId}\n                     setRoute = {this.props.setRoute}\n                     clearDetourOptions = {this.props.clearDetourOptions}\n                     >\n                    </Detour>\n              )\n            });\n\n        return(\n            <div>\n                <p>Detour Options</p>\n                <ul>\n                    {detourOptions}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default DetourOptions;","import React from \"react\";\nimport MapContainer from \"./MapContainer\";\nimport UserInput from \"./UserInput\";\nimport Button from \"./Button\";\nimport DetourForm from \"./detour/DetourForm\";\nimport DetourOptions from \"./detour/DetourOptions\";\n\nclass Main extends React.Component{\n    render(){\n        return(\n        <div className=\"app-container row\">\n          <div className=\"side-bar\">\n            <UserInput \n                origin = {this.props.origin}\n                destination = {this.props.destination}\n                setOrigin = {this.props.setOrigin}\n                setDestination = {this.props.setDestination}\n                setRoute = {this.props.setRoute}>\n            </UserInput>\n            {this.props.showDetourForm ? (\n              <DetourForm\n                setDetourLocation = {this.props.setDetourLocation}\n                setDetourRadius = {this.props.setDetourRadius}\n                setDetourOptions = {this.props.setDetourOptions}\n                detourLocation = {this.props.detourLocation}\n                detourRadius = {this.props.detourRadius}\n                route = {this.props.route}>\n              </DetourForm>\n            ): (\n            <div className=\"container add-detour-container\">\n              <Button\n                disabledCriteria={!this.props.showDetourButton}\n                onClick={this.props.getDetourForm}\n                className = \"btn btn-primary add-detour-btn\"\n                id = \"add-detour-button\"\n                text = \"+ Add Detour\">\n              </Button>\n            </div>            \n            )}  \n            {this.props.showDetourOptions ? (\n              <DetourOptions\n                origin = {this.props.origin}\n                destination = {this.props.destination}\n                detourOptions = {this.props.detourOptions}\n                setRoute = {this.props.setRoute}\n                clearDetourOptions = {this.props.clearDetourOptions}>\n              </DetourOptions>\n            ): (<div></div>)}  \n          </div>\n          <div className=\"map-container\">\n            <MapContainer\n                showRoute = {this.props.showRoute}\n                showDetourPoint = {this.props.showDetourPoint}\n                detourLocation = {this.props.detourLocation}\n                detourRadius = {this.props.detourRadius}\n                detourOptions = {this.props.detourOptions}\n                route = {this.props.route}>\n            </MapContainer>\n          </div>\n        </div>\n        )\n    }\n}\n\nexport default Main;","import Main from \"../components/Main\";\nimport { connect } from \"react-redux\";\n\nlet matchStateToProps = state => {\n  return { ...state };\n};\n\nlet matchDispatchToProps = dispatch => {\n  return {\n    setOrigin: origin =>\n      dispatch({\n        type: \"SET_ORIGIN\",\n        data: {\n          origin: origin\n        }\n      }),\n    setDestination: destination =>\n      dispatch({\n        type: \"SET_DESTINATION\",\n        data: {\n          destination: destination\n        }\n      }),\n    setRoute: route =>\n      dispatch({\n        type: \"SET_ROUTE\",\n        data: {\n          route: route\n        }\n      }),\n    getDetourForm: () =>\n      dispatch({\n        type: \"GET_DETOUR_FORM\"\n      }),\n    setDetourLocation: detourLocation =>\n      dispatch({\n        type: \"SET_DETOUR_LOCATION\",\n        data: {\n          detourLocation: detourLocation\n        }\n      }),\n    setDetourRadius: detourRadius =>\n      dispatch({\n        type: \"SET_DETOUR_RADIUS\",\n        data: {\n          detourRadius: detourRadius\n        }\n      }),\n    setDetourOptions: detourOptions =>\n      dispatch({\n        type: \"SET_DETOUR_OPTIONS\",\n        data: {\n          detourOptions: detourOptions\n        }\n      }),\n    clearDetourOptions: () =>\n      dispatch({\n        type: \"CLEAR_DETOUR_OPTIONS\"\n      })\n  };\n};\n\nexport default connect(\n  matchStateToProps,\n  matchDispatchToProps\n)(Main);\n","import React from \"react\";\nimport MainContainer from \"./containers/MainContainer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <MainContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\n  origin: \"\",\n  destination: \"\",\n  route: [],\n  routeOptions: [],\n  detourOptions: [],\n  detourLocation: 0,\n  detourRadius: 0,\n  showRoute: false,\n  showDetourButton: false,\n  showDetourForm: false,\n  showDetourOptions: false,\n  showDetourPoint: false\n};\n\nconst mainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SET_ORIGIN\":\n      return {\n        ...state,\n        origin: action.data.origin\n      };\n    case \"SET_DESTINATION\":\n      return {\n        ...state,\n        destination: action.data.destination\n      };\n    case \"SET_ROUTE\":\n      return {\n        ...state,\n        showRoute: true,\n        showDetourButton: true,\n        route: action.data.route\n      };\n    case \"GET_DETOUR_FORM\":\n      return {\n        ...state,\n        showDetourForm: true,\n        showDetourPoint: true\n      };\n    case \"SET_DETOUR_LOCATION\":\n      return {\n        ...state,\n        detourLocation: action.data.detourLocation\n      };\n    case \"SET_DETOUR_RADIUS\":\n      return {\n        ...state,\n        detourRadius: action.data.detourRadius\n      };\n    case \"SET_DETOUR_OPTIONS\":\n      return {\n        ...state,\n        detourOptions: action.data.detourOptions,\n        showDetourOptions: true\n      };\n    case \"CLEAR_DETOUR_OPTIONS\":\n      return {\n        ...state,\n        detourOptions: [],\n        detourRadius: 0,\n        showDetourOptions: false,\n        showDetourForm: false,\n        showDetourOptions: false\n      };\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport mainReducer from \"./reducers/main-reducer\";\n\nlet store = createStore(mainReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}